test for pedal

test

test
hiiii
asdaf
adsfasdf
123











from pedal import *





from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
















test instruction



test
testhb









test

test
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)


def summate(values):
    total = 0
    for v in values:
        total += v
        print(total)
    return total


print(summate([1, 2, 3]))
test










import * from pedal




test



from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
 from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
from pedal import *

match = find_match("""
def summate():
    __expr__
""")

if not match: 
    explain("You have not defined the function", label = "function_missing")

assert_equal(call('summate',[1,3,5]), 9)
